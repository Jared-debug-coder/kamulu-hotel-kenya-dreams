name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  # Allow manual workflow runs from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clean existing artifacts
        run: |
          echo "Cleaning up any existing artifacts"
          mkdir -p dist

      - name: Build project
        run: npm run build
        env:
          # Ensure base path is correctly set for GitHub Pages
          VITE_BASE_URL: /kamulu-hotel-kenya-dreams/

      - name: Verify build output
        run: |
          echo "Verifying build output in dist directory"
          ls -la dist
          if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
            echo "Error: dist directory is empty or does not exist"
            exit 1
          fi

      - name: Debug - Check working directory
        run: |
          echo "Current working directory: $(pwd)"
          echo "Repository root files:"
          ls -la

      - name: Debug - Check dist directory structure and permissions
        run: |
          echo "Dist directory structure:"
          ls -la dist
          echo "Checking permissions:"
          stat dist
          echo "Ensuring correct permissions:"
          chmod -R 755 dist
          echo "After permission change:"
          stat dist

      - name: Debug - Full directory tree
        run: |
          echo "Full directory tree (2 levels):"
          find . -type d -maxdepth 2 -ls

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: dist
          if-no-files-found: error
          retention-days: 1
        
      - name: Debug - Upload artifact result
        if: always()
        run: |
          echo "Upload artifact step result: ${{ steps.upload-artifact.outcome }}"
          echo "Upload artifact step conclusion: ${{ steps.upload-artifact.conclusion }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: .

      - name: Debug - Download artifact result
        if: always()
        run: |
          echo "Download artifact step result: ${{ steps.download-artifact.outcome }}"
          echo "Download artifact step conclusion: ${{ steps.download-artifact.conclusion }}"

      - name: List downloaded files
        run: |
          echo "Listing downloaded files"
          ls -la

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Output deployment URL
        if: success()
        run: |
          echo "Deployed to: ${{ steps.deployment.outputs.page_url }}"
